<?xml version="1.0" encoding="UTF-8" ?>

<schema name="moxie-courses" version="1.5">

    <fields>
		<!-- Represents an Event -->
		
		<!-- 
			Information about the source 
		-->
        
        <field name="source_name" type="string" indexed="true" stored="true" required="true" />
        
        <field name="source_url" type="string" indexed="false" stored="true" required="true" />		
		
		<!-- 
			Information about the event 
		-->

        <field name="event_uid" type="string" indexed="true" stored="true" required="true" />
        
		<field name="event_title" type="text_en_splitting" indexed="true" stored="true" required="true" />
		
		<field name="event_description" type="text_en_splitting" indexed="true" stored="true" required="false" />

		<field name="event_start" type="date" indexed="true" stored="true" required="true" />
        
		<field name="event_end" type="date" indexed="true" stored="true" required="false" />

		<field name="event_location" type="string" indexed="true" stored="true" required="false" />
		
        <!-- Full Text Search for event title, description... -->
        <field name="fts" type="text_en_splitting" indexed="true" stored="false" multiValued="true"/>

        <!-- Signature of the event (based on start date and title) -->
        <field name="signature" type="string" stored="true" indexed="true" multiValued="false" />

		<!-- Required version field -->
	    <field name="_version_" type="long" indexed="true" stored="true" multiValued="false" />
    </fields>

    <uniqueKey>signature</uniqueKey>

    <copyField source="event_title" dest="fts"/>
    <copyField source="event_description" dest="fts"/>

    <types>
        <!-- Simple type that doesn't do any analyze, perfect for IDs... -->
        <fieldType name="string" class="solr.StrField" sortMissingLast="true" />

        <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>

	    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>

        <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate" />
        <!-- used by dnyamic field "_coordinate" -->
        <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>

		<!-- TODO see Trie based date field for faster date range queries and date faceting 
			class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0" -->
		<fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>

        <!-- A text field with defaults appropriate for English: it
            tokenizes with StandardTokenizer, removes English stop words
            (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
            finally applies Porter's stemming.  The query time analyzer
            also applies synonyms from synonyms.txt. -->
        <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <!-- in this example, we will only use synonyms at query time
                <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                -->
                <!-- Case insensitive stop word removal.
                add enablePositionIncrements=true in both the index and query
                analyzers to leave a 'gap' for more accurate phrase queries.
                -->
                <filter class="solr.StopFilterFactory"
                    ignoreCase="true"
                    words="lang/stopwords_en.txt"
                    enablePositionIncrements="true"
                />
                <filter class="solr.LowerCaseFilterFactory"/>
	            <filter class="solr.EnglishPossessiveFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
	            <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
	            -->
                <filter class="solr.PorterStemFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
                <filter class="solr.StopFilterFactory"
                     ignoreCase="true"
                     words="lang/stopwords_en.txt"
                     enablePositionIncrements="true"
                     />
                <filter class="solr.LowerCaseFilterFactory"/>
	            <filter class="solr.EnglishPossessiveFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
	            <!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
                <filter class="solr.EnglishMinimalStemFilterFactory"/>
	            -->
                <filter class="solr.PorterStemFilterFactory"/>
            </analyzer>
        </fieldType>

            <!-- A text field with defaults appropriate for English, plus
        	 aggressive word-splitting and autophrase features enabled.
        	 This field is just like text_en, except it adds
        	 WordDelimiterFilter to enable splitting and matching of
        	 words on case-change, alpha numeric boundaries, and
        	 non-alphanumeric chars.  This means certain compound word
        	 cases will work, for example query "wi fi" will match
        	 document "WiFi" or "wi-fi".
                -->
            <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
              <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <!-- in this example, we will only use synonyms at query time
                <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
                -->
                <!-- Case insensitive stop word removal.
                  add enablePositionIncrements=true in both the index and query
                  analyzers to leave a 'gap' for more accurate phrase queries.
                -->
                <filter class="solr.StopFilterFactory"
                        ignoreCase="true"
                        words="lang/stopwords_en.txt"
                        enablePositionIncrements="true"
                        />
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                <filter class="solr.PorterStemFilterFactory"/>
              </analyzer>
              <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
                <filter class="solr.StopFilterFactory"
                        ignoreCase="true"
                        words="lang/stopwords_en.txt"
                        enablePositionIncrements="true"
                        />
                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                <filter class="solr.PorterStemFilterFactory"/>
              </analyzer>
            </fieldType>
    </types>

</schema>
